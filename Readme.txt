Программа - телефонный справочник.
Интерфейс реализован через командную строку.

В справочнике хранится следующая информация: фамилия, имя, отчество,
название организации, телефон рабочий, телефон личный (сотовый)

Хранение данных осуществляется в текстовом файле phonebase.txt, находящемся в каталоге с программой.

Реализованы следующие возможности:
- Добавление записей
    - Через отдельный пункт основного меню.
    - Присвоение уникального ID для записи
    - Валидация текста на наличие запятых
    - Валидация номеров телефонов на наличие символов отличных от цифр
    - Валидация номеров телефонов на количество символов
    - Валидация на заполнение либо Имени либо названия Организации, оба поля не могут быть пустыми
    - Валидация на заполнение хотя бы одного номера телефона - нельзя создать запись без номера

- Постраничная навигация
    - Количество записей на одном листе можно настраивать
    - Размер ячеек выводимых данных в символах можно настраивать
    - В зависимости от наличия предыдущих/следующих страниц выводятся подсказки, а также номер текущей страницы.

- Редактирование записей
    - В окне просмотра при введении ID записи будет вызвана функция редактирования записи
    - Как и при создании записи будут поочередно предложены на ввод все поля записи
    - При этом отображает текущее значение в каждом поле
    - Подключены все те же валидации, что и при создании записи

- Удаление записей
    - В окне просмотра введите id записи и букву d для удаления записи (например "10d")
    - Будет предложено подтвердить действительно ли необходимо удалить запись

- Поиск записей
    - Из основного меню можно вызвать окно поиска записей
    - Если ввести ID, остальные фильтры будут опущены, сразу будет выведена искомая запись
    - Далее будут предложены остальные поля, можно вводить не полностью ("и" в имени выведет и "Иванов и "Ирин")
    - Несколько введеных параметров уточняют поиск

Настройки:
RECORDS_ON_LIST - Количество записей на одной странице телефонной книги
CHARS_FOR_ID - Количество зарезервированных символов для отображения поля ID
CHARS_FOR_COMPANY - Количество зарезервированных символов для названия компании
CHARS_FOR_NAME - Количество зарезервированных символов для ФИО
CHARS_FOR_PHONE - Количество зарезервированных символов для телефона (13 - чтобы вместился заголовок)

Аннотация функций и классов:

def get_id() - вычисляет свободный ID - создает множество всех использованных ID, возвращает наименьшее свободное число
def phone_validation(number) - валидация вводимого номера телефона - проверка на 11 символов, а также отсутствие букв
def text_validation(text) - валидация текста - проверка на наличие запятых

class PhoneRecord: - класс записи в телефонной книги, инициализирует переменные
    def make_record(self, record_id=get_id()) - формирует запись в том виде в котором она хранится в файле
    def read_record(record) - принимает запись в виде "как в файле" и формирует на ее основе список с разделенными данными
    def combine_record(context) - формирует запись в том виде, в котором она выводится на экран

class PhoneBook: - основной класс объединяющий функции и утилиты
    def editing(record) - На вход принимает экземпляр класса PhoneRecord().
                          Поочередно предлагает ввести или редактировать поля записи.
                          Встроена валидация на наличие заполнения важных полей
    def add_record(self) - Функция добавления. Вызывает self.editing, после чего добавляет новую запись в базу
    def edit_record(self, selected_record) - Функция редактирования записи.
                          Вызывает self.editing, после чего обновляет базу с отредактированными данными
    def delete_record(self, selected_record_plus_d) - Функция удаления записи.
                          Удаляет запись, после чего обновляет базу
    def find_record(self) - Функция поиска записи по введенным параметрам. Выводит на экран найденные записи
    def show_phone_book(self, page_number) - Отображение на экране телефонной книги, управление навигацией.
                          Для вывода заголовков вызывает self.shapka(). Для вывода записей вызывает self.combine_records_for_view
    def shapka() - Формирует заголовки для вывода на экран
    def combine_records_for_view(self, page_number) - Формирует вывод записей на экран в зависимости от текущей страницы
    def user_menu(self) - Управляет основным меню программы
